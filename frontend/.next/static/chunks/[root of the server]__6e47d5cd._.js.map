{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack:///[turbopack]/browser/dev/hmr-client/hmr-client.ts"],"sourcesContent":["/// <reference path=\"../../../shared/runtime-types.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-globals.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-protocol.d.ts\" />\r\n/// <reference path=\"../../runtime/base/dev-extensions.ts\" />\r\n\r\ntype SendMessage = (msg: any) => void;\r\nexport type WebSocketMessage =\r\n  | {\r\n      type: \"turbopack-connected\";\r\n    }\r\n  | {\r\n      type: \"turbopack-message\";\r\n      data: Record<string, any>;\r\n    };\r\n\r\n\r\nexport type ClientOptions = {\r\n  addMessageListener: (cb: (msg: WebSocketMessage) => void) => void;\r\n  sendMessage: SendMessage;\r\n  onUpdateError: (err: unknown) => void;\r\n};\r\n\r\nexport function connect({\r\n  addMessageListener,\r\n  sendMessage,\r\n  onUpdateError = console.error,\r\n}: ClientOptions) {\r\n  addMessageListener((msg) => {\r\n    switch (msg.type) {\r\n      case \"turbopack-connected\":\r\n        handleSocketConnected(sendMessage);\r\n        break;\r\n      default:\r\n        try {\r\n          if (Array.isArray(msg.data)) {\r\n            for (let i = 0; i < msg.data.length; i++) {\r\n              handleSocketMessage(msg.data[i] as ServerMessage);\r\n            }\r\n          } else {\r\n            handleSocketMessage(msg.data as ServerMessage);\r\n          }\r\n          applyAggregatedUpdates();\r\n        } catch (e: unknown) {\r\n          console.warn(\r\n            \"[Fast Refresh] performing full reload\\n\\n\" +\r\n              \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\r\n              \"You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n\" +\r\n              \"Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n\" +\r\n              \"It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n\" +\r\n              \"Fast Refresh requires at least one parent function component in your React tree.\"\r\n          );\r\n          onUpdateError(e);\r\n          location.reload();\r\n        }\r\n        break;\r\n    }\r\n  });\r\n\r\n  const queued = globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS;\r\n  if (queued != null && !Array.isArray(queued)) {\r\n    throw new Error(\"A separate HMR handler was already registered\");\r\n  }\r\n  globalThis.TURBOPACK_CHUNK_UPDATE_LISTENERS = {\r\n    push: ([chunkPath, callback]: [ChunkListPath, UpdateCallback]) => {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\r\n    },\r\n  };\r\n\r\n  if (Array.isArray(queued)) {\r\n    for (const [chunkPath, callback] of queued) {\r\n      subscribeToChunkUpdate(chunkPath, sendMessage, callback);\r\n    }\r\n  }\r\n}\r\n\r\ntype UpdateCallbackSet = {\r\n  callbacks: Set<UpdateCallback>;\r\n  unsubscribe: () => void;\r\n};\r\n\r\nconst updateCallbackSets: Map<ResourceKey, UpdateCallbackSet> = new Map();\r\n\r\nfunction sendJSON(sendMessage: SendMessage, message: ClientMessage) {\r\n  sendMessage(JSON.stringify(message));\r\n}\r\n\r\ntype ResourceKey = string;\r\n\r\nfunction resourceKey(resource: ResourceIdentifier): ResourceKey {\r\n  return JSON.stringify({\r\n    path: resource.path,\r\n    headers: resource.headers || null,\r\n  });\r\n}\r\n\r\nfunction subscribeToUpdates(\r\n  sendMessage: SendMessage,\r\n  resource: ResourceIdentifier\r\n): () => void {\r\n  sendJSON(sendMessage, {\r\n    type: \"turbopack-subscribe\",\r\n    ...resource,\r\n  });\r\n\r\n  return () => {\r\n    sendJSON(sendMessage, {\r\n      type: \"turbopack-unsubscribe\",\r\n      ...resource,\r\n    });\r\n  };\r\n}\r\n\r\nfunction handleSocketConnected(sendMessage: SendMessage) {\r\n  for (const key of updateCallbackSets.keys()) {\r\n    subscribeToUpdates(sendMessage, JSON.parse(key));\r\n  }\r\n}\r\n\r\n// we aggregate all pending updates until the issues are resolved\r\nconst chunkListsWithPendingUpdates: Map<ResourceKey, PartialServerMessage> =\r\n  new Map();\r\n\r\nfunction aggregateUpdates(msg: PartialServerMessage) {\r\n  const key = resourceKey(msg.resource);\r\n  let aggregated = chunkListsWithPendingUpdates.get(key);\r\n\r\n  if (aggregated) {\r\n    aggregated.instruction = mergeChunkListUpdates(\r\n      aggregated.instruction,\r\n      msg.instruction\r\n    );\r\n  } else {\r\n    chunkListsWithPendingUpdates.set(key, msg);\r\n  }\r\n}\r\n\r\nfunction applyAggregatedUpdates() {\r\n  if (chunkListsWithPendingUpdates.size === 0) return;\r\n  hooks.beforeRefresh();\r\n  for (const msg of chunkListsWithPendingUpdates.values()) {\r\n    triggerUpdate(msg);\r\n  }\r\n  chunkListsWithPendingUpdates.clear();\r\n  finalizeUpdate();\r\n}\r\n\r\nfunction mergeChunkListUpdates(\r\n  updateA: ChunkListUpdate,\r\n  updateB: ChunkListUpdate\r\n): ChunkListUpdate {\r\n  let chunks;\r\n  if (updateA.chunks != null) {\r\n    if (updateB.chunks == null) {\r\n      chunks = updateA.chunks;\r\n    } else {\r\n      chunks = mergeChunkListChunks(updateA.chunks, updateB.chunks);\r\n    }\r\n  } else if (updateB.chunks != null) {\r\n    chunks = updateB.chunks;\r\n  }\r\n\r\n  let merged;\r\n  if (updateA.merged != null) {\r\n    if (updateB.merged == null) {\r\n      merged = updateA.merged;\r\n    } else {\r\n      // Since `merged` is an array of updates, we need to merge them all into\r\n      // one, consistent update.\r\n      // Since there can only be `EcmascriptMergeUpdates` in the array, there is\r\n      // no need to key on the `type` field.\r\n      let update = updateA.merged[0];\r\n      for (let i = 1; i < updateA.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateA.merged[i]\r\n        );\r\n      }\r\n\r\n      for (let i = 0; i < updateB.merged.length; i++) {\r\n        update = mergeChunkListEcmascriptMergedUpdates(\r\n          update,\r\n          updateB.merged[i]\r\n        );\r\n      }\r\n\r\n      merged = [update];\r\n    }\r\n  } else if (updateB.merged != null) {\r\n    merged = updateB.merged;\r\n  }\r\n\r\n  return {\r\n    type: \"ChunkListUpdate\",\r\n    chunks,\r\n    merged,\r\n  };\r\n}\r\n\r\nfunction mergeChunkListChunks(\r\n  chunksA: Record<ChunkPath, ChunkUpdate>,\r\n  chunksB: Record<ChunkPath, ChunkUpdate>\r\n): Record<ChunkPath, ChunkUpdate> {\r\n  const chunks: Record<ChunkPath, ChunkUpdate> = {};\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<[ChunkPath, ChunkUpdate]>) {\r\n    const chunkUpdateB = chunksB[chunkPath];\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeChunkUpdates(chunkUpdateA, chunkUpdateB);\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate;\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA;\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<[ChunkPath, ChunkUpdate]>) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB;\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\nfunction mergeChunkUpdates(\r\n  updateA: ChunkUpdate,\r\n  updateB: ChunkUpdate\r\n): ChunkUpdate | undefined {\r\n  if (\r\n    (updateA.type === \"added\" && updateB.type === \"deleted\") ||\r\n    (updateA.type === \"deleted\" && updateB.type === \"added\")\r\n  ) {\r\n    return undefined;\r\n  }\r\n\r\n  if (updateA.type === \"partial\") {\r\n    invariant(updateA.instruction, \"Partial updates are unsupported\");\r\n  }\r\n\r\n  if (updateB.type === \"partial\") {\r\n    invariant(updateB.instruction, \"Partial updates are unsupported\");\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction mergeChunkListEcmascriptMergedUpdates(\r\n  mergedA: EcmascriptMergedUpdate,\r\n  mergedB: EcmascriptMergedUpdate\r\n): EcmascriptMergedUpdate {\r\n  const entries = mergeEcmascriptChunkEntries(mergedA.entries, mergedB.entries);\r\n  const chunks = mergeEcmascriptChunksUpdates(mergedA.chunks, mergedB.chunks);\r\n\r\n  return {\r\n    type: \"EcmascriptMergedUpdate\",\r\n    entries,\r\n    chunks,\r\n  };\r\n}\r\n\r\nfunction mergeEcmascriptChunkEntries(\r\n  entriesA: Record<ModuleId, EcmascriptModuleEntry> | undefined,\r\n  entriesB: Record<ModuleId, EcmascriptModuleEntry> | undefined\r\n): Record<ModuleId, EcmascriptModuleEntry> {\r\n  return { ...entriesA, ...entriesB };\r\n}\r\n\r\nfunction mergeEcmascriptChunksUpdates(\r\n  chunksA: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined,\r\n  chunksB: Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined\r\n): Record<ChunkPath, EcmascriptMergedChunkUpdate> | undefined {\r\n  if (chunksA == null) {\r\n    return chunksB;\r\n  }\r\n\r\n  if (chunksB == null) {\r\n    return chunksA;\r\n  }\r\n\r\n  const chunks: Record<ChunkPath, EcmascriptMergedChunkUpdate> = {};\r\n\r\n  for (const [chunkPath, chunkUpdateA] of Object.entries(chunksA) as Array<[ChunkPath, EcmascriptMergedChunkUpdate]>) {\r\n    const chunkUpdateB = chunksB[chunkPath];\r\n    if (chunkUpdateB != null) {\r\n      const mergedUpdate = mergeEcmascriptChunkUpdates(\r\n        chunkUpdateA,\r\n        chunkUpdateB\r\n      );\r\n      if (mergedUpdate != null) {\r\n        chunks[chunkPath] = mergedUpdate;\r\n      }\r\n    } else {\r\n      chunks[chunkPath] = chunkUpdateA;\r\n    }\r\n  }\r\n\r\n  for (const [chunkPath, chunkUpdateB] of Object.entries(chunksB) as Array<[ChunkPath, EcmascriptMergedChunkUpdate]>) {\r\n    if (chunks[chunkPath] == null) {\r\n      chunks[chunkPath] = chunkUpdateB;\r\n    }\r\n  }\r\n\r\n  if (Object.keys(chunks).length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\nfunction mergeEcmascriptChunkUpdates(\r\n  updateA: EcmascriptMergedChunkUpdate,\r\n  updateB: EcmascriptMergedChunkUpdate\r\n): EcmascriptMergedChunkUpdate | undefined {\r\n  if (updateA.type === \"added\" && updateB.type === \"deleted\") {\r\n    // These two completely cancel each other out.\r\n    return undefined;\r\n  }\r\n\r\n  if (updateA.type === \"deleted\" && updateB.type === \"added\") {\r\n    const added = [];\r\n    const deleted = [];\r\n    const deletedModules = new Set(updateA.modules ?? []);\r\n    const addedModules = new Set(updateB.modules ?? []);\r\n\r\n    for (const moduleId of addedModules) {\r\n      if (!deletedModules.has(moduleId)) {\r\n        added.push(moduleId);\r\n      }\r\n    }\r\n\r\n    for (const moduleId of deletedModules) {\r\n      if (!addedModules.has(moduleId)) {\r\n        deleted.push(moduleId);\r\n      }\r\n    }\r\n\r\n    if (added.length === 0 && deleted.length === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    return {\r\n      type: \"partial\",\r\n      added,\r\n      deleted,\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"partial\" && updateB.type === \"partial\") {\r\n    const added = new Set([...(updateA.added ?? []), ...(updateB.added ?? [])]);\r\n    const deleted = new Set([\r\n      ...(updateA.deleted ?? []),\r\n      ...(updateB.deleted ?? []),\r\n    ]);\r\n\r\n    if (updateB.added != null) {\r\n      for (const moduleId of updateB.added) {\r\n        deleted.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    if (updateB.deleted != null) {\r\n      for (const moduleId of updateB.deleted) {\r\n        added.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: \"partial\",\r\n      added: [...added],\r\n      deleted: [...deleted],\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"added\" && updateB.type === \"partial\") {\r\n    const modules = new Set([\r\n      ...(updateA.modules ?? []),\r\n      ...(updateB.added ?? []),\r\n    ]);\r\n\r\n    for (const moduleId of updateB.deleted ?? []) {\r\n      modules.delete(moduleId);\r\n    }\r\n\r\n    return {\r\n      type: \"added\",\r\n      modules: [...modules],\r\n    };\r\n  }\r\n\r\n  if (updateA.type === \"partial\" && updateB.type === \"deleted\") {\r\n    // We could eagerly return `updateB` here, but this would potentially be\r\n    // incorrect if `updateA` has added modules.\r\n\r\n    const modules = new Set(updateB.modules ?? []);\r\n\r\n    if (updateA.added != null) {\r\n      for (const moduleId of updateA.added) {\r\n        modules.delete(moduleId);\r\n      }\r\n    }\r\n\r\n    return {\r\n      type: \"deleted\",\r\n      modules: [...modules],\r\n    };\r\n  }\r\n\r\n  // Any other update combination is invalid.\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction invariant(_: never, message: string): never {\r\n  throw new Error(`Invariant: ${message}`);\r\n}\r\n\r\nconst CRITICAL = [\"bug\", \"error\", \"fatal\"];\r\n\r\nfunction compareByList(list: any[], a: any, b: any) {\r\n  const aI = list.indexOf(a) + 1 || list.length;\r\n  const bI = list.indexOf(b) + 1 || list.length;\r\n  return aI - bI;\r\n}\r\n\r\nconst chunksWithIssues: Map<ResourceKey, Issue[]> = new Map();\r\n\r\nfunction emitIssues() {\r\n  const issues = [];\r\n  const deduplicationSet = new Set();\r\n\r\n  for (const [_, chunkIssues] of chunksWithIssues) {\r\n    for (const chunkIssue of chunkIssues) {\r\n      if (deduplicationSet.has(chunkIssue.formatted)) continue;\r\n\r\n      issues.push(chunkIssue);\r\n      deduplicationSet.add(chunkIssue.formatted);\r\n    }\r\n  }\r\n\r\n  sortIssues(issues);\r\n\r\n  hooks.issues(issues);\r\n}\r\n\r\nfunction handleIssues(msg: ServerMessage): boolean {\r\n  const key = resourceKey(msg.resource);\r\n  let hasCriticalIssues = false;\r\n\r\n  for (const issue of msg.issues) {\r\n    if (CRITICAL.includes(issue.severity)) {\r\n      hasCriticalIssues = true;\r\n    }\r\n  }\r\n\r\n  if (msg.issues.length > 0) {\r\n    chunksWithIssues.set(key, msg.issues);\r\n  } else if (chunksWithIssues.has(key)) {\r\n    chunksWithIssues.delete(key);\r\n  }\r\n\r\n  emitIssues();\r\n\r\n  return hasCriticalIssues;\r\n}\r\n\r\nconst SEVERITY_ORDER = [\"bug\", \"fatal\", \"error\", \"warning\", \"info\", \"log\"];\r\nconst CATEGORY_ORDER = [\r\n  \"parse\",\r\n  \"resolve\",\r\n  \"code generation\",\r\n  \"rendering\",\r\n  \"typescript\",\r\n  \"other\",\r\n];\r\n\r\nfunction sortIssues(issues: Issue[]) {\r\n  issues.sort((a, b) => {\r\n    const first = compareByList(SEVERITY_ORDER, a.severity, b.severity);\r\n    if (first !== 0) return first;\r\n    return compareByList(CATEGORY_ORDER, a.category, b.category);\r\n  });\r\n}\r\n\r\nconst hooks = {\r\n  beforeRefresh: () => {},\r\n  refresh: () => {},\r\n  buildOk: () => {},\r\n  issues: (_issues: Issue[]) => {},\r\n};\r\n\r\nexport function setHooks(newHooks: typeof hooks) {\r\n  Object.assign(hooks, newHooks);\r\n}\r\n\r\nfunction handleSocketMessage(msg: ServerMessage) {\r\n  sortIssues(msg.issues);\r\n\r\n  handleIssues(msg);\r\n\r\n  switch (msg.type) {\r\n    case \"issues\":\r\n      // issues are already handled\r\n      break;\r\n    case \"partial\":\r\n      // aggregate updates\r\n      aggregateUpdates(msg);\r\n      break;\r\n    default:\r\n      // run single update\r\n      const runHooks = chunkListsWithPendingUpdates.size === 0;\r\n      if (runHooks) hooks.beforeRefresh();\r\n      triggerUpdate(msg);\r\n      if (runHooks) finalizeUpdate();\r\n      break;\r\n  }\r\n}\r\n\r\nfunction finalizeUpdate() {\r\n  hooks.refresh();\r\n  hooks.buildOk();\r\n\r\n  // This is used by the Next.js integration test suite to notify it when HMR\r\n  // updates have been completed.\r\n  // TODO: Only run this in test environments (gate by `process.env.__NEXT_TEST_MODE`)\r\n  if (globalThis.__NEXT_HMR_CB) {\r\n    globalThis.__NEXT_HMR_CB();\r\n    globalThis.__NEXT_HMR_CB = null;\r\n  }\r\n}\r\n\r\nfunction subscribeToChunkUpdate(\r\n  chunkListPath: ChunkListPath,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n): () => void {\r\n  return subscribeToUpdate(\r\n    {\r\n      path: chunkListPath,\r\n    },\r\n    sendMessage,\r\n    callback\r\n  );\r\n}\r\n\r\nexport function subscribeToUpdate(\r\n  resource: ResourceIdentifier,\r\n  sendMessage: SendMessage,\r\n  callback: UpdateCallback\r\n) {\r\n  const key = resourceKey(resource);\r\n  let callbackSet: UpdateCallbackSet;\r\n  const existingCallbackSet = updateCallbackSets.get(key);\r\n  if (!existingCallbackSet) {\r\n    callbackSet = {\r\n      callbacks: new Set([callback]),\r\n      unsubscribe: subscribeToUpdates(sendMessage, resource),\r\n    };\r\n    updateCallbackSets.set(key, callbackSet);\r\n  } else {\r\n    existingCallbackSet.callbacks.add(callback);\r\n    callbackSet = existingCallbackSet;\r\n  }\r\n\r\n  return () => {\r\n    callbackSet.callbacks.delete(callback);\r\n\r\n    if (callbackSet.callbacks.size === 0) {\r\n      callbackSet.unsubscribe();\r\n      updateCallbackSets.delete(key);\r\n    }\r\n  };\r\n}\r\n\r\nfunction triggerUpdate(msg: ServerMessage) {\r\n  const key = resourceKey(msg.resource);\r\n  const callbackSet = updateCallbackSets.get(key);\r\n  if (!callbackSet) {\r\n    return;\r\n  }\r\n\r\n  for (const callback of callbackSet.callbacks) {\r\n    callback(msg);\r\n  }\r\n\r\n  if (msg.type === \"notFound\") {\r\n    // This indicates that the resource which we subscribed to either does not exist or\r\n    // has been deleted. In either case, we should clear all update callbacks, so if a\r\n    // new subscription is created for the same resource, it will send a new \"subscribe\"\r\n    // message to the server.\r\n    // No need to send an \"unsubscribe\" message to the server, it will have already\r\n    // dropped the update stream before sending the \"notFound\" message.\r\n    updateCallbackSets.delete(key);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/pages/notifications.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Card, \r\n  CardContent, \r\n  Alert, \r\n  AlertTitle, \r\n  Divider, \r\n  Chip,\r\n  CircularProgress,\r\n  useTheme,\r\n  Grid,\r\n  Paper,\r\n  Stack,\r\n  Skeleton\r\n} from '@mui/material';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n} from 'chart.js';\r\nimport { format } from 'date-fns';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n);\r\n\r\nconst AirQualityMonitor = () => {\r\n  const theme = useTheme();\r\n  const [readings, setReadings] = useState([]);\r\n  const [currentData, setCurrentData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\r\n  const ws = useRef(null);\r\n  const lastUpdateRef = useRef(Date.now());\r\n  const dataBufferRef = useRef([]);\r\n\r\n  // Calculate AQI from PM2.5\r\n  const calculateAQI = (pm25) => {\r\n    const val = parseFloat(pm25);\r\n    if (val <= 12) return { value: Math.round((50/12)*val), level: 'Good', color: '#4CAF50' };\r\n    if (val <= 35.4) return { value: Math.round(50 + (49/(35.4-12))*(val-12)), level: 'Moderate', color: '#FFEB3B' };\r\n    if (val <= 55.4) return { value: Math.round(100 + (49/(55.4-35.4))*(val-35.4)), level: 'Unhealthy for Sensitive', color: '#FF9800' };\r\n    if (val <= 150.4) return { value: Math.round(150 + (99/(150.4-55.4))*(val-55.4)), level: 'Unhealthy', color: '#F44336' };\r\n    if (val <= 250.4) return { value: Math.round(200 + (99/(250.4-150.4))*(val-150.4)), level: 'Very Unhealthy', color: '#9C27B0' };\r\n    return { value: Math.round(300 + (199/(500-250.4))*(val-250.4)), level: 'Hazardous', color: '#673AB7' };\r\n  };\r\n\r\n  // Process and update data every 10 seconds\r\n  const processDataBuffer = useMemo(() => {\r\n    return () => {\r\n      if (dataBufferRef.current.length > 0) {\r\n        const newData = dataBufferRef.current[dataBufferRef.current.length - 1];\r\n        const aqi = calculateAQI(newData.pm25);\r\n        \r\n        setCurrentData({\r\n          ...newData,\r\n          aqi,\r\n          timestamp: format(new Date(), 'yyyy-MM-dd HH:mm:ss')\r\n        });\r\n\r\n        setReadings(prev => {\r\n          const updated = [...prev, {\r\n            ...newData,\r\n            aqi,\r\n            timestamp: format(new Date(), 'HH:mm:ss')\r\n          }];\r\n          return updated.slice(-30); // Keep last 30 readings\r\n        });\r\n\r\n        dataBufferRef.current = [];\r\n        lastUpdateRef.current = Date.now();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(processDataBuffer, 5000); // 10-second updates\r\n    return () => clearInterval(interval);\r\n  }, [processDataBuffer]);\r\n\r\n  useEffect(() => {\r\n    // Connect to WebSocket\r\n    ws.current = new WebSocket('ws://localhost:8000');\r\n\r\n    ws.current.onopen = () => {\r\n      console.log('WebSocket connected');\r\n      setConnectionStatus('connected');\r\n      setLoading(false);\r\n    };\r\n\r\n    ws.current.onmessage = (event) => {\r\n      const newData = JSON.parse(event.data);\r\n      dataBufferRef.current.push(newData); // Buffer incoming data\r\n    };\r\n\r\n    ws.current.onerror = (error) => {\r\n      console.error('WebSocket error:', error);\r\n      setConnectionStatus('error');\r\n      setLoading(false);\r\n    };\r\n\r\n    ws.current.onclose = () => {\r\n      console.log('WebSocket disconnected');\r\n      setConnectionStatus('disconnected');\r\n    };\r\n\r\n    return () => {\r\n      if (ws.current) {\r\n        ws.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Chart data configuration\r\n  const chartData = useMemo(() => ({\r\n    labels: readings.map(r => r.time),\r\n    datasets: [\r\n      {\r\n        label: 'PM2.5 (µg/m³)',\r\n        data: readings.map(r => r.pm25),\r\n        borderColor: theme.palette.primary.main,\r\n        backgroundColor: 'rgba(63, 81, 181, 0.1)',\r\n        tension: 0.3,\r\n        fill: true,\r\n        yAxisID: 'y',\r\n        borderWidth: 2,\r\n        pointRadius: 3\r\n      },\r\n      {\r\n        label: 'Temperature (°C)',\r\n        data: readings.map(r => r.temp),\r\n        borderColor: theme.palette.secondary.main,\r\n        backgroundColor: 'rgba(245, 0, 87, 0.1)',\r\n        tension: 0.3,\r\n        yAxisID: 'y1',\r\n        borderWidth: 2,\r\n        pointRadius: 3\r\n      }\r\n    ]\r\n  }), [readings, theme]);\r\n\r\n  const chartOptions = useMemo(() => ({\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    interaction: {\r\n      mode: 'index',\r\n      intersect: false,\r\n    },\r\n    scales: {\r\n      y: {\r\n        type: 'linear',\r\n        display: true,\r\n        position: 'left',\r\n        title: {\r\n          display: true,\r\n          text: 'PM2.5 (µg/m³)',\r\n          color: theme.palette.text.secondary\r\n        },\r\n        grid: {\r\n          color: theme.palette.divider\r\n        },\r\n        ticks: {\r\n          color: theme.palette.text.secondary\r\n        }\r\n      },\r\n      y1: {\r\n        type: 'linear',\r\n        display: true,\r\n        position: 'right',\r\n        grid: {\r\n          drawOnChartArea: false,\r\n        },\r\n        title: {\r\n          display: true,\r\n          text: 'Temperature (°C)',\r\n          color: theme.palette.text.secondary\r\n        },\r\n        ticks: {\r\n          color: theme.palette.text.secondary\r\n        }\r\n      },\r\n      x: {\r\n        grid: {\r\n          color: theme.palette.divider\r\n        },\r\n        ticks: {\r\n          color: theme.palette.text.secondary\r\n        }\r\n      }\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n        labels: {\r\n          color: theme.palette.text.primary,\r\n          usePointStyle: true,\r\n          pointStyle: 'circle'\r\n        }\r\n      },\r\n      tooltip: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        titleColor: theme.palette.text.primary,\r\n        bodyColor: theme.palette.text.secondary,\r\n        borderColor: theme.palette.divider,\r\n        borderWidth: 1,\r\n        usePointStyle: true,\r\n        callbacks: {\r\n          label: function(context) {\r\n            return `${context.dataset.label}: ${context.parsed.y.toFixed(1)}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }), [theme]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n        <CircularProgress />\r\n        <Typography variant=\"body1\" sx={{ ml: 2 }}>Connecting to real-time data...</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (connectionStatus === 'error') {\r\n    return (\r\n      <Alert severity=\"error\" sx={{ mt: 3 }}>\r\n        Failed to connect to the real-time data server. Please try again later.\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ \r\n        fontWeight: 700,\r\n        mb: 4,\r\n        color: theme.palette.text.primary\r\n      }}>\r\n        Real Time Air Quality Alert\r\n      </Typography>\r\n\r\n      <Grid container spacing={3} sx={{ mb: 3 }}>\r\n        <Grid item xs={12} md={6}>\r\n          <Card sx={{ \r\n            height: '100%',\r\n            boxShadow: theme.shadows[2],\r\n            border: `1px solid ${theme.palette.divider}`,\r\n            borderRadius: 2\r\n          }}>\r\n            <CardContent>\r\n              <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\r\n                <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n                  Current Conditions\r\n                </Typography>\r\n                <Chip \r\n                  label={`Updated every 5s`} \r\n                  size=\"small\" \r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                />\r\n              </Stack>\r\n              <Divider sx={{ mb: 3 }} />\r\n              \r\n              {currentData ? (\r\n                <>\r\n                  <Box sx={{ \r\n                    display: 'flex', \r\n                    alignItems: 'center', \r\n                    mb: 3,\r\n                    p: 2,\r\n                    borderRadius: 1,\r\n                    backgroundColor: theme.palette.background.default\r\n                  }}>\r\n                    <Box sx={{ \r\n                      width: 12, \r\n                      height: 12, \r\n                      borderRadius: '50%', \r\n                      backgroundColor: currentData.aqi.color,\r\n                      mr: 2\r\n                    }} />\r\n                    <Typography variant=\"body1\" sx={{ fontWeight: 500 }}>\r\n                      {currentData.aqi.level} (AQI: {currentData.aqi.value})\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  {currentData.aqi.value > 100 && (\r\n                    <Alert severity=\"warning\" sx={{ mb: 3 }}>\r\n                      <AlertTitle>Air Quality Alert</AlertTitle>\r\n                      The current air quality is {currentData.aqi.level.toLowerCase()}. \r\n                      {currentData.aqi.value > 150 ? ' Consider limiting outdoor activities.' : ''}\r\n                    </Alert>\r\n                  )}\r\n\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={6} sm={4}>\r\n                      <MetricCard \r\n                        title=\"PM2.5\" \r\n                        value={`${currentData.pm25} µg/m³`} \r\n                        color={theme.palette.primary.main}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={4}>\r\n                      <MetricCard \r\n                        title=\"PM10\" \r\n                        value={`${currentData.pm10} µg/m³`} \r\n                        color={theme.palette.secondary.main}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={4}>\r\n                      <MetricCard \r\n                        title=\"Temperature\" \r\n                        value={`${currentData.temp} °C`} \r\n                        color={theme.palette.error.main}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={4}>\r\n                      <MetricCard \r\n                        title=\"Humidity\" \r\n                        value={`${currentData.humidity}%`} \r\n                        color={theme.palette.info.main}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={4}>\r\n                      <MetricCard \r\n                        title=\"Pressure\" \r\n                        value={`${currentData.pressure} hPa`} \r\n                        color={theme.palette.warning.main}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} sm={4}>\r\n                      <MetricCard \r\n                        title=\"Wind Speed\" \r\n                        value={`${currentData.wind} km/h`} \r\n                        color={theme.palette.success.main}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Typography variant=\"caption\" display=\"block\" sx={{ \r\n                    mt: 2, \r\n                    color: 'text.secondary',\r\n                    textAlign: 'right'\r\n                  }}>\r\n                    Last updated: {currentData.timestamp}\r\n                  </Typography>\r\n                </>\r\n              ) : (\r\n                <Box sx={{ height: 300, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Card sx={{ \r\n            height: '100%',\r\n            boxShadow: theme.shadows[2],\r\n            border: `1px solid ${theme.palette.divider}`,\r\n            borderRadius: 2\r\n          }}>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 2 }}>\r\n                Real-time Trends\r\n              </Typography>\r\n              <Divider sx={{ mb: 3 }} />\r\n              <Box sx={{ height: 400 }}>\r\n                <Line data={chartData} options={chartOptions} />\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n{/* \r\n      <Card sx={{ \r\n        boxShadow: theme.shadows[2],\r\n        border: `1px solid ${theme.palette.divider}`,\r\n        borderRadius: 2,\r\n        height: \"100%\"\r\n      }}>\r\n        <CardContent>\r\n          <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 2 }}>\r\n            Historical Data (Last 30 Readings)\r\n          </Typography>\r\n          <Divider sx={{ mb: 3 }} />\r\n          <Box sx={{ height: 400 }}>\r\n            <Line \r\n              data={{\r\n                labels: readings.map(r => r.time),\r\n                datasets: [\r\n                  {\r\n                    label: 'PM2.5',\r\n                    data: readings.map(r => r.pm25),\r\n                    borderColor: theme.palette.primary.main,\r\n                    backgroundColor: 'rgba(63, 81, 181, 0.1)',\r\n                    tension: 0.3,\r\n                    borderWidth: 2,\r\n                    pointRadius: 2\r\n                  },\r\n                  {\r\n                    label: 'Temperature',\r\n                    data: readings.map(r => r.temp),\r\n                    borderColor: theme.palette.secondary.main,\r\n                    backgroundColor: 'rgba(245, 0, 87, 0.1)',\r\n                    tension: 0.3,\r\n                    borderWidth: 2,\r\n                    pointRadius: 2\r\n                  },\r\n                  {\r\n                    label: 'Humidity',\r\n                    data: readings.map(r => r.humidity),\r\n                    borderColor: theme.palette.info.main,\r\n                    backgroundColor: 'rgba(33, 150, 243, 0.1)',\r\n                    tension: 0.3,\r\n                    borderWidth: 2,\r\n                    pointRadius: 2\r\n                  }\r\n                ]\r\n              }} \r\n              options={chartOptions}\r\n            />\r\n          </Box>\r\n        </CardContent>\r\n      </Card> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst MetricCard = ({ title, value, color }) => {\r\n  return (\r\n    <Paper sx={{ \r\n      p: 2,\r\n      borderRadius: 1,\r\n      height: '100%',\r\n      borderLeft: `4px solid ${color}`\r\n    }}>\r\n      <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 0.5 }}>\r\n        {title}\r\n      </Typography>\r\n      <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\r\n        {value}\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AirQualityMonitor;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1246, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/entry/page-loader.ts"],"sourcesContent":["const PAGE_PATH = \"/notifications\";\n\n/// <reference types=\"next/client\" />\r\n\r\n// inserted by rust code\r\ndeclare const PAGE_PATH: string\r\n\r\n  // Adapted from https://github.com/vercel/next.js/blob/b7f9f1f98fc8ab602e84825105b5727272b72e7d/packages/next/src/build/webpack/loaders/next-client-pages-loader.ts\r\n;(window.__NEXT_P = window.__NEXT_P || []).push([\r\n  PAGE_PATH,\r\n  () => {\r\n    return require('PAGE')\r\n  },\r\n])\r\n// @ts-expect-error module.hot exists\r\nif (module.hot) {\r\n  // @ts-expect-error module.hot exists\r\n  module.hot.dispose(function () {\r\n    window.__NEXT_P.push([PAGE_PATH])\r\n  })\r\n}\r\n"],"names":[],"mappings":"AAAA,MAAM,YAAY;AAQjB,CAAC,OAAO,QAAQ,GAAG,OAAO,QAAQ,IAAI,EAAE,EAAE,IAAI,CAAC;IAC9C;IACA;QACE;IACF;CACD;AACD,qCAAqC;AACrC,IAAI,OAAO,GAAG,EAAE;IACd,qCAAqC;IACrC,OAAO,GAAG,CAAC,OAAO,CAAC;QACjB,OAAO,QAAQ,CAAC,IAAI,CAAC;YAAC;SAAU;IAClC;AACF","ignoreList":[0],"debugId":null}}]
}