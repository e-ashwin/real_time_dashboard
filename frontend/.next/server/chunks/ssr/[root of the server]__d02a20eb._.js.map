{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/theme.js"],"sourcesContent":["const themes = {\r\n    sunny: {\r\n      background: \"linear-gradient(to right, #ffcc00, #ff9900)\", // Warm gradient\r\n      text: \"#333\",\r\n      card: \"#fffbe6\",\r\n    },\r\n    rainy: {\r\n      background: \"linear-gradient(to right, #6e7f80, #3a506b)\", // Dark & wet\r\n      text: \"#fff\",\r\n      card: \"#5c677d\",\r\n    },\r\n    stormy: {\r\n      background: \"linear-gradient(to right, #2b2d42, #8d99ae)\", // Dark stormy clouds\r\n      text: \"#fff\",\r\n      card: \"#4a4e69\",\r\n    },\r\n    snowy: {\r\n      background: \"linear-gradient(to right, #dff9fb, #c7ecee)\", // Cold & bright\r\n      text: \"#333\",\r\n      card: \"#ecf0f1\",\r\n    },\r\n  };\r\n  \r\n  export default themes;\r\n  "],"names":[],"mappings":";;;AAAA,MAAM,SAAS;IACX,OAAO;QACL,YAAY;QACZ,MAAM;QACN,MAAM;IACR;IACA,OAAO;QACL,YAAY;QACZ,MAAM;QACN,MAAM;IACR;IACA,QAAQ;QACN,YAAY;QACZ,MAAM;QACN,MAAM;IACR;IACA,OAAO;QACL,YAAY;QACZ,MAAM;QACN,MAAM;IACR;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/pages/_app.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport themes from \"../theme\"; // Import theme styles\r\n// import \"../styles/globals.css\";\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  const [themeMode, setThemeMode] = useState(\"sunny\"); // Default theme\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.open-meteo.com/v1/forecast?latitude=28.6139&longitude=77.2090&current_weather=true\") // Replace with dynamic location\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const weather = data.current_weather.weathercode;\r\n        if (weather >= 0 && weather < 3) setThemeMode(\"sunny\");\r\n        else if (weather >= 3 && weather < 6) setThemeMode(\"rainy\");\r\n        else if (weather >= 6 && weather < 8) setThemeMode(\"stormy\");\r\n        else setThemeMode(\"snowy\");\r\n      });\r\n  }, []);\r\n\r\n  const muiTheme = createTheme({\r\n    palette: {\r\n      mode: themeMode === \"dark\" ? \"dark\" : \"light\",\r\n      background: { default: themes[themeMode].background },\r\n      text: { primary: themes[themeMode].text },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={muiTheme}>\r\n      <Component {...pageProps} />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default MyApp;"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA,uKAA+B,sBAAsB;;;;;AACrD,kCAAkC;AAElC,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE,UAAU,gBAAgB;IAErE,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kGAAkG,gCAAgC;SACrI,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC;YACL,MAAM,UAAU,KAAK,eAAe,CAAC,WAAW;YAChD,IAAI,WAAW,KAAK,UAAU,GAAG,aAAa;iBACzC,IAAI,WAAW,KAAK,UAAU,GAAG,aAAa;iBAC9C,IAAI,WAAW,KAAK,UAAU,GAAG,aAAa;iBAC9C,aAAa;QACpB;IACJ,GAAG,EAAE;IAEL,MAAM,WAAW,CAAA,GAAA,6MAAA,CAAA,cAAW,AAAD,EAAE;QAC3B,SAAS;YACP,MAAM,cAAc,SAAS,SAAS;YACtC,YAAY;gBAAE,SAAS,8FAAA,CAAA,UAAM,CAAC,UAAU,CAAC,UAAU;YAAC;YACpD,MAAM;gBAAE,SAAS,8FAAA,CAAA,UAAM,CAAC,UAAU,CAAC,IAAI;YAAC;QAC1C;IACF;IAEA,qBACE,qKAAC,iMAAA,CAAA,gBAAa;QAAC,OAAO;kBACpB,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B;uCAEe","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/pages/windMap.js"],"sourcesContent":["import React from \"react\";\r\nimport DeckGL from \"@deck.gl/react\";\r\nimport { LineLayer } from \"@deck.gl/layers\";\r\nimport Map from \"react-map-gl/maplibre\"; // ✅ Using MapLibre GL\r\nimport \"maplibre-gl/dist/maplibre-gl.css\";\r\n\r\nconst WindMap = ({ lat, lon, windData }) => {\r\n  // ✅ Default to a known location (e.g., New York) if lat/lon are undefined\r\n  const defaultLat = 28.6139;\r\n  const defaultLon = 77.209;\r\n\r\n  const mapLatitude = lat ?? defaultLat;\r\n  const mapLongitude = lon ?? defaultLon;\r\n\r\n  const layers = [\r\n    new LineLayer({\r\n      id: \"wind-layer\",\r\n      data: windData || [], // Avoid undefined windData\r\n      getSourcePosition: (d) => d.start || [mapLongitude, mapLatitude],\r\n      getTargetPosition: (d) => d.end || [mapLongitude + 0.01, mapLatitude + 0.01],\r\n      getColor: [0, 0, 255], // Blue wind lines\r\n      getWidth: 2,\r\n    }),\r\n  ];\r\n\r\n  return (\r\n    <DeckGL\r\n      initialViewState={{\r\n        longitude: mapLongitude,\r\n        latitude: mapLatitude,\r\n        zoom: 10,\r\n        pitch: 0,\r\n        bearing: 0,\r\n      }}\r\n      controller={false} // ❌ Static map (no zoom/pan)\r\n      layers={layers}\r\n    >\r\n      <Map\r\n        mapLib={import(\"maplibre-gl\")}\r\n        mapStyle=\"https://basemaps.cartocdn.com/gl/positron-gl-style/style.json\"\r\n      />\r\n    </DeckGL>\r\n  );\r\n};\r\n\r\nexport default WindMap;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA,gRAAyC,sBAAsB;;;;;;;;;;;;;AAG/D,MAAM,UAAU,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE;IACrC,0EAA0E;IAC1E,MAAM,aAAa;IACnB,MAAM,aAAa;IAEnB,MAAM,cAAc,OAAO;IAC3B,MAAM,eAAe,OAAO;IAE5B,MAAM,SAAS;QACb,IAAI,4IAAA,CAAA,YAAS,CAAC;YACZ,IAAI;YACJ,MAAM,YAAY,EAAE;YACpB,mBAAmB,CAAC,IAAM,EAAE,KAAK,IAAI;oBAAC;oBAAc;iBAAY;YAChE,mBAAmB,CAAC,IAAM,EAAE,GAAG,IAAI;oBAAC,eAAe;oBAAM,cAAc;iBAAK;YAC5E,UAAU;gBAAC;gBAAG;gBAAG;aAAI;YACrB,UAAU;QACZ;KACD;IAED,qBACE,qKAAC,0IAAA,CAAA,UAAM;QACL,kBAAkB;YAChB,WAAW;YACX,UAAU;YACV,MAAM;YACN,OAAO;YACP,SAAS;QACX;QACA,YAAY;QACZ,QAAQ;kBAER,cAAA,qKAAC,4JAAA,CAAA,UAAG;YACF,MAAM;YACN,UAAS;;;;;;;;;;;AAIjB;uCAEe","debugId":null}}]
}