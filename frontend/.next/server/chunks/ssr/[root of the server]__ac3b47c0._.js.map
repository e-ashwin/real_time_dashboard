{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/theme.js"],"sourcesContent":["const themes = {\r\n    sunny: {\r\n      background: \"linear-gradient(to right, #ffcc00, #ff9900)\", // Warm gradient\r\n      text: \"#333\",\r\n      card: \"#fffbe6\",\r\n    },\r\n    rainy: {\r\n      background: \"linear-gradient(to right, #6e7f80, #3a506b)\", // Dark & wet\r\n      text: \"#fff\",\r\n      card: \"#5c677d\",\r\n    },\r\n    stormy: {\r\n      background: \"linear-gradient(to right, #2b2d42, #8d99ae)\", // Dark stormy clouds\r\n      text: \"#fff\",\r\n      card: \"#4a4e69\",\r\n    },\r\n    snowy: {\r\n      background: \"linear-gradient(to right, #dff9fb, #c7ecee)\", // Cold & bright\r\n      text: \"#333\",\r\n      card: \"#ecf0f1\",\r\n    },\r\n  };\r\n  \r\n  export default themes;\r\n  "],"names":[],"mappings":";;;AAAA,MAAM,SAAS;IACX,OAAO;QACL,YAAY;QACZ,MAAM;QACN,MAAM;IACR;IACA,OAAO;QACL,YAAY;QACZ,MAAM;QACN,MAAM;IACR;IACA,QAAQ;QACN,YAAY;QACZ,MAAM;QACN,MAAM;IACR;IACA,OAAO;QACL,YAAY;QACZ,MAAM;QACN,MAAM;IACR;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/pages/_app.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport themes from \"../theme\"; // Import theme styles\r\n// import \"../styles/globals.css\";\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  const [themeMode, setThemeMode] = useState(\"sunny\"); // Default theme\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.open-meteo.com/v1/forecast?latitude=28.6139&longitude=77.2090&current_weather=true\") // Replace with dynamic location\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const weather = data.current_weather.weathercode;\r\n        if (weather >= 0 && weather < 3) setThemeMode(\"sunny\");\r\n        else if (weather >= 3 && weather < 6) setThemeMode(\"rainy\");\r\n        else if (weather >= 6 && weather < 8) setThemeMode(\"stormy\");\r\n        else setThemeMode(\"snowy\");\r\n      });\r\n  }, []);\r\n\r\n  const muiTheme = createTheme({\r\n    palette: {\r\n      mode: themeMode === \"dark\" ? \"dark\" : \"light\",\r\n      background: { default: themes[themeMode].background },\r\n      text: { primary: themes[themeMode].text },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={muiTheme}>\r\n      <Component {...pageProps} />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default MyApp;"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA,uKAA+B,sBAAsB;;;;;AACrD,kCAAkC;AAElC,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE,UAAU,gBAAgB;IAErE,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kGAAkG,gCAAgC;SACrI,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC;YACL,MAAM,UAAU,KAAK,eAAe,CAAC,WAAW;YAChD,IAAI,WAAW,KAAK,UAAU,GAAG,aAAa;iBACzC,IAAI,WAAW,KAAK,UAAU,GAAG,aAAa;iBAC9C,IAAI,WAAW,KAAK,UAAU,GAAG,aAAa;iBAC9C,aAAa;QACpB;IACJ,GAAG,EAAE;IAEL,MAAM,WAAW,CAAA,GAAA,6MAAA,CAAA,cAAW,AAAD,EAAE;QAC3B,SAAS;YACP,MAAM,cAAc,SAAS,SAAS;YACtC,YAAY;gBAAE,SAAS,8FAAA,CAAA,UAAM,CAAC,UAAU,CAAC,UAAU;YAAC;YACpD,MAAM;gBAAE,SAAS,8FAAA,CAAA,UAAM,CAAC,UAAU,CAAC,IAAI;YAAC;QAC1C;IACF;IAEA,qBACE,qKAAC,iMAAA,CAAA,gBAAa;QAAC,OAAO;kBACpB,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B;uCAEe","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/components/WindHumidityMap.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StaticMap } from \"react-map-gl\";\r\nimport { DeckGL, LineLayer, ScatterplotLayer } from \"deck.gl\";\r\n\r\nconst MAPBOX_STYLE = \"https://basemaps.cartocdn.com/gl/positron-gl-style/style.json\";\r\n\r\nconst INITIAL_VIEW_STATE = {\r\n  longitude: 78.9629, // Default Center (Change as needed)\r\n  latitude: 20.5937,\r\n  zoom: 5,\r\n  pitch: 45,\r\n  bearing: 0,\r\n};\r\n\r\nconst WindHumidityMap = ({ data }) => {\r\n  const [windLines, setWindLines] = useState([]);\r\n  const [humidityDroplets, setHumidityDroplets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!data || data.length === 0) return;\r\n\r\n    // Convert wind data to line segments for animation\r\n    const windData = data.map((entry) => ({\r\n      sourcePosition: [parseFloat(entry.lon), parseFloat(entry.lat)],\r\n      targetPosition: [\r\n        parseFloat(entry.lon) + 0.1 * Math.cos(parseFloat(entry.wind)), // Simulated wind direction\r\n        parseFloat(entry.lat) + 0.1 * Math.sin(parseFloat(entry.wind)),\r\n      ],\r\n      color: [0, 150, 255], // Blue color for wind\r\n    }));\r\n\r\n    // Convert humidity data into animated droplets\r\n    const humidityData = data.map((entry) => ({\r\n      position: [parseFloat(entry.lon), parseFloat(entry.lat)],\r\n      color: [0, 0, 255, Math.min(255, parseFloat(entry.humidity) * 3)], // More transparency for less humidity\r\n      radius: 5000,\r\n    }));\r\n\r\n    setWindLines(windData);\r\n    setHumidityDroplets(humidityData);\r\n  }, [data]);\r\n\r\n  // Wind Layer (Animated Lines)\r\n  const windLayer = new LineLayer({\r\n    id: \"wind-layer\",\r\n    data: windLines,\r\n    getSourcePosition: (d) => d.sourcePosition,\r\n    getTargetPosition: (d) => d.targetPosition,\r\n    getColor: (d) => d.color,\r\n    getWidth: 2,\r\n    animated: true, // Optional for animation\r\n  });\r\n\r\n  // Humidity Layer (Droplets)\r\n  const humidityLayer = new ScatterplotLayer({\r\n    id: \"humidity-layer\",\r\n    data: humidityDroplets,\r\n    getPosition: (d) => d.position,\r\n    getRadius: (d) => d.radius,\r\n    getColor: (d) => d.color,\r\n    opacity: 0.5,\r\n  });\r\n\r\n  return (\r\n    <DeckGL initialViewState={INITIAL_VIEW_STATE} controller={true} layers={[windLayer, humidityLayer]}>\r\n      <StaticMap mapStyle={MAPBOX_STYLE} />\r\n    </DeckGL>\r\n  );\r\n};\r\n\r\nexport default WindHumidityMap;\r\n"],"names":[],"mappings":";;;;AAAA;;;;;;AAEA;;;;;;;;;AAEA,MAAM,eAAe;AAErB,MAAM,qBAAqB;IACzB,WAAW;IACX,UAAU;IACV,MAAM;IACN,OAAO;IACP,SAAS;AACX;AAEA,MAAM,kBAAkB,CAAC,EAAE,IAAI,EAAE;IAC/B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC7C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAE3D,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,QAAQ,KAAK,MAAM,KAAK,GAAG;QAEhC,mDAAmD;QACnD,MAAM,WAAW,KAAK,GAAG,CAAC,CAAC,QAAU,CAAC;gBACpC,gBAAgB;oBAAC,WAAW,MAAM,GAAG;oBAAG,WAAW,MAAM,GAAG;iBAAE;gBAC9D,gBAAgB;oBACd,WAAW,MAAM,GAAG,IAAI,MAAM,KAAK,GAAG,CAAC,WAAW,MAAM,IAAI;oBAC5D,WAAW,MAAM,GAAG,IAAI,MAAM,KAAK,GAAG,CAAC,WAAW,MAAM,IAAI;iBAC7D;gBACD,OAAO;oBAAC;oBAAG;oBAAK;iBAAI;YACtB,CAAC;QAED,+CAA+C;QAC/C,MAAM,eAAe,KAAK,GAAG,CAAC,CAAC,QAAU,CAAC;gBACxC,UAAU;oBAAC,WAAW,MAAM,GAAG;oBAAG,WAAW,MAAM,GAAG;iBAAE;gBACxD,OAAO;oBAAC;oBAAG;oBAAG;oBAAK,KAAK,GAAG,CAAC,KAAK,WAAW,MAAM,QAAQ,IAAI;iBAAG;gBACjE,QAAQ;YACV,CAAC;QAED,aAAa;QACb,oBAAoB;IACtB,GAAG;QAAC;KAAK;IAET,8BAA8B;IAC9B,MAAM,YAAY,IAAI,oHAAA,CAAA,YAAS,CAAC;QAC9B,IAAI;QACJ,MAAM;QACN,mBAAmB,CAAC,IAAM,EAAE,cAAc;QAC1C,mBAAmB,CAAC,IAAM,EAAE,cAAc;QAC1C,UAAU,CAAC,IAAM,EAAE,KAAK;QACxB,UAAU;QACV,UAAU;IACZ;IAEA,4BAA4B;IAC5B,MAAM,gBAAgB,IAAI,oHAAA,CAAA,mBAAgB,CAAC;QACzC,IAAI;QACJ,MAAM;QACN,aAAa,CAAC,IAAM,EAAE,QAAQ;QAC9B,WAAW,CAAC,IAAM,EAAE,MAAM;QAC1B,UAAU,CAAC,IAAM,EAAE,KAAK;QACxB,SAAS;IACX;IAEA,qBACE,qKAAC,oHAAA,CAAA,SAAM;QAAC,kBAAkB;QAAoB,YAAY;QAAM,QAAQ;YAAC;YAAW;SAAc;kBAChG,cAAA,qKAAC;YAAU,UAAU;;;;;;;;;;;AAG3B;uCAEe","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/pages/windMap.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport WindHumidityMap from \"../components/WindHumidityMap\";\r\n\r\nconst WindMapPage = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const ws = new WebSocket(\"ws://localhost:8000\");\r\n\r\n    ws.onmessage = (event) => {\r\n      const newData = JSON.parse(event.data);\r\n      setData((prevData) => [...prevData.slice(-50), newData]); // Keep latest 50 data points\r\n    };\r\n\r\n    return () => ws.close();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>Live Wind & Humidity Map</h1>\r\n      <WindHumidityMap data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WindMapPage;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;;AAEA,MAAM,cAAc;IAClB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAEnC,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,KAAK,IAAI,UAAU;QAEzB,GAAG,SAAS,GAAG,CAAC;YACd,MAAM,UAAU,KAAK,KAAK,CAAC,MAAM,IAAI;YACrC,QAAQ,CAAC,WAAa;uBAAI,SAAS,KAAK,CAAC,CAAC;oBAAK;iBAAQ,GAAG,6BAA6B;QACzF;QAEA,OAAO,IAAM,GAAG,KAAK;IACvB,GAAG,EAAE;IAEL,qBACE,qKAAC;;0BACC,qKAAC;gBAAG,OAAO;oBAAE,WAAW;gBAAS;0BAAG;;;;;;0BACpC,qKAAC,sHAAA,CAAA,UAAe;gBAAC,MAAM;;;;;;;;;;;;AAG7B;uCAEe","debugId":null}}]
}