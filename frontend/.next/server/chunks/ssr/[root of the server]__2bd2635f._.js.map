{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/theme.js"],"sourcesContent":["const themes = {\r\n    sunny: {\r\n      background: \"linear-gradient(to right, #ffcc00, #ff9900)\", // Warm gradient\r\n      text: \"#333\",\r\n      card: \"#fffbe6\",\r\n    },\r\n    rainy: {\r\n      background: \"linear-gradient(to right, #6e7f80, #3a506b)\", // Dark & wet\r\n      text: \"#fff\",\r\n      card: \"#5c677d\",\r\n    },\r\n    stormy: {\r\n      background: \"linear-gradient(to right, #2b2d42, #8d99ae)\", // Dark stormy clouds\r\n      text: \"#fff\",\r\n      card: \"#4a4e69\",\r\n    },\r\n    snowy: {\r\n      background: \"linear-gradient(to right, #dff9fb, #c7ecee)\", // Cold & bright\r\n      text: \"#333\",\r\n      card: \"#ecf0f1\",\r\n    },\r\n  };\r\n  \r\n  export default themes;\r\n  "],"names":[],"mappings":";;;AAAA,MAAM,SAAS;IACX,OAAO;QACL,YAAY;QACZ,MAAM;QACN,MAAM;IACR;IACA,OAAO;QACL,YAAY;QACZ,MAAM;QACN,MAAM;IACR;IACA,QAAQ;QACN,YAAY;QACZ,MAAM;QACN,MAAM;IACR;IACA,OAAO;QACL,YAAY;QACZ,MAAM;QACN,MAAM;IACR;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/pages/_app.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport themes from \"../theme\"; // Import theme styles\r\n// import \"../styles/globals.css\";\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  const [themeMode, setThemeMode] = useState(\"sunny\"); // Default theme\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.open-meteo.com/v1/forecast?latitude=28.6139&longitude=77.2090&current_weather=true\") // Replace with dynamic location\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const weather = data.current_weather.weathercode;\r\n        if (weather >= 0 && weather < 3) setThemeMode(\"sunny\");\r\n        else if (weather >= 3 && weather < 6) setThemeMode(\"rainy\");\r\n        else if (weather >= 6 && weather < 8) setThemeMode(\"stormy\");\r\n        else setThemeMode(\"snowy\");\r\n      });\r\n  }, []);\r\n\r\n  const muiTheme = createTheme({\r\n    palette: {\r\n      mode: themeMode === \"dark\" ? \"dark\" : \"light\",\r\n      background: { default: themes[themeMode].background },\r\n      text: { primary: themes[themeMode].text },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={muiTheme}>\r\n      <Component {...pageProps} />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default MyApp;"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA,uKAA+B,sBAAsB;;;;;AACrD,kCAAkC;AAElC,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE,UAAU,gBAAgB;IAErE,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kGAAkG,gCAAgC;SACrI,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC;YACL,MAAM,UAAU,KAAK,eAAe,CAAC,WAAW;YAChD,IAAI,WAAW,KAAK,UAAU,GAAG,aAAa;iBACzC,IAAI,WAAW,KAAK,UAAU,GAAG,aAAa;iBAC9C,IAAI,WAAW,KAAK,UAAU,GAAG,aAAa;iBAC9C,aAAa;QACpB;IACJ,GAAG,EAAE;IAEL,MAAM,WAAW,CAAA,GAAA,6MAAA,CAAA,cAAW,AAAD,EAAE;QAC3B,SAAS;YACP,MAAM,cAAc,SAAS,SAAS;YACtC,YAAY;gBAAE,SAAS,8FAAA,CAAA,UAAM,CAAC,UAAU,CAAC,UAAU;YAAC;YACpD,MAAM;gBAAE,SAAS,8FAAA,CAAA,UAAM,CAAC,UAAU,CAAC,IAAI;YAAC;QAC1C;IACF;IAEA,qBACE,qKAAC,iMAAA,CAAA,gBAAa;QAAC,OAAO;kBACpB,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B;uCAEe","debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/components/windLayer.js"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport { useMap } from \"react-leaflet\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\n\r\nconst WindLayer = () => {\r\n  const map = useMap();\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!map) return;\r\n\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n    // Simulated wind particles\r\n    let particles = Array.from({ length: 200 }, () => ({\r\n      x: Math.random() * window.innerWidth,\r\n      y: Math.random() * window.innerHeight,\r\n      vx: (Math.random() - 0.5) * 2,\r\n      vy: (Math.random() - 0.5) * 2,\r\n    }));\r\n\r\n    const drawWind = () => {\r\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n      ctx.fillStyle = \"rgba(0, 150, 255, 0.7)\";\r\n      particles.forEach((p) => {\r\n        p.x += p.vx;\r\n        p.y += p.vy;\r\n\r\n        if (p.x > window.innerWidth || p.x < 0) p.vx *= -1;\r\n        if (p.y > window.innerHeight || p.y < 0) p.vy *= -1;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(p.x, p.y, 2, 0, Math.PI * 2);\r\n        ctx.fill();\r\n      });\r\n      requestAnimationFrame(drawWind);\r\n    };\r\n\r\n    drawWind();\r\n  }, [map]);\r\n\r\n  return <canvas ref={canvasRef} style={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\" }} />;\r\n};\r\n\r\nexport default WindLayer;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;;;;AAGA,MAAM,YAAY;IAChB,MAAM,MAAM,CAAA,GAAA,gIAAA,CAAA,SAAM,AAAD;IACjB,MAAM,YAAY,CAAA,GAAA,mGAAA,CAAA,SAAM,AAAD,EAAE;IAEzB,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,KAAK;QAEV,MAAM,MAAM,UAAU,OAAO,CAAC,UAAU,CAAC;QAEzC,2BAA2B;QAC3B,IAAI,YAAY,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAI,GAAG,IAAM,CAAC;gBACjD,GAAG,KAAK,MAAM,KAAK,OAAO,UAAU;gBACpC,GAAG,KAAK,MAAM,KAAK,OAAO,WAAW;gBACrC,IAAI,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;gBAC5B,IAAI,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;YAC9B,CAAC;QAED,MAAM,WAAW;YACf,IAAI,SAAS,CAAC,GAAG,GAAG,UAAU,OAAO,CAAC,KAAK,EAAE,UAAU,OAAO,CAAC,MAAM;YACrE,IAAI,SAAS,GAAG;YAChB,UAAU,OAAO,CAAC,CAAC;gBACjB,EAAE,CAAC,IAAI,EAAE,EAAE;gBACX,EAAE,CAAC,IAAI,EAAE,EAAE;gBAEX,IAAI,EAAE,CAAC,GAAG,OAAO,UAAU,IAAI,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC;gBACjD,IAAI,EAAE,CAAC,GAAG,OAAO,WAAW,IAAI,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC;gBAElD,IAAI,SAAS;gBACb,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,GAAG;gBAClC,IAAI,IAAI;YACV;YACA,sBAAsB;QACxB;QAEA;IACF,GAAG;QAAC;KAAI;IAER,qBAAO,qKAAC;QAAO,KAAK;QAAW,OAAO;YAAE,UAAU;YAAY,KAAK;YAAG,MAAM;YAAG,OAAO;YAAQ,QAAQ;QAAO;;;;;;AAC/G;uCAEe","debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/pages/windMap.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { MapContainer, TileLayer, useMap } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport WindLayer  from \"../components/windLayer\";\r\n\r\nconst WeatherMap = () => {\r\n  return (\r\n    <MapContainer center={[20.5937, 78.9629]} zoom={5} style={{ height: \"100vh\", width: \"100%\" }}>\r\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n      <WindLayer />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default WeatherMap;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;;;;;;;;;;;AAEA,MAAM,aAAa;IACjB,qBACE,qKAAC,gIAAA,CAAA,eAAY;QAAC,QAAQ;YAAC;YAAS;SAAQ;QAAE,MAAM;QAAG,OAAO;YAAE,QAAQ;YAAS,OAAO;QAAO;;0BACzF,qKAAC,gIAAA,CAAA,YAAS;gBAAC,KAAI;;;;;;0BACf,qKAAC,gHAAA,CAAA,UAAS;;;;;;;;;;;AAGhB;uCAEe","debugId":null}}]
}