{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/theme.js"],"sourcesContent":["const themes = {\r\n    sunny: {\r\n      background: \"linear-gradient(to right, #ffcc00, #ff9900)\", // Warm gradient\r\n      text: \"#333\",\r\n      card: \"#fffbe6\",\r\n    },\r\n    rainy: {\r\n      background: \"linear-gradient(to right, #6e7f80, #3a506b)\", // Dark & wet\r\n      text: \"#fff\",\r\n      card: \"#5c677d\",\r\n    },\r\n    stormy: {\r\n      background: \"linear-gradient(to right, #2b2d42, #8d99ae)\", // Dark stormy clouds\r\n      text: \"#fff\",\r\n      card: \"#4a4e69\",\r\n    },\r\n    snowy: {\r\n      background: \"linear-gradient(to right, #dff9fb, #c7ecee)\", // Cold & bright\r\n      text: \"#333\",\r\n      card: \"#ecf0f1\",\r\n    },\r\n  };\r\n  \r\n  export default themes;\r\n  "],"names":[],"mappings":";;;AAAA,MAAM,SAAS;IACX,OAAO;QACL,YAAY;QACZ,MAAM;QACN,MAAM;IACR;IACA,OAAO;QACL,YAAY;QACZ,MAAM;QACN,MAAM;IACR;IACA,QAAQ;QACN,YAAY;QACZ,MAAM;QACN,MAAM;IACR;IACA,OAAO;QACL,YAAY;QACZ,MAAM;QACN,MAAM;IACR;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/pages/_app.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport themes from \"../theme\"; // Import theme styles\r\n// import \"../styles/globals.css\";\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  const [themeMode, setThemeMode] = useState(\"sunny\"); // Default theme\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.open-meteo.com/v1/forecast?latitude=28.6139&longitude=77.2090&current_weather=true\") // Replace with dynamic location\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const weather = data.current_weather.weathercode;\r\n        if (weather >= 0 && weather < 3) setThemeMode(\"sunny\");\r\n        else if (weather >= 3 && weather < 6) setThemeMode(\"rainy\");\r\n        else if (weather >= 6 && weather < 8) setThemeMode(\"stormy\");\r\n        else setThemeMode(\"snowy\");\r\n      });\r\n  }, []);\r\n\r\n  const muiTheme = createTheme({\r\n    palette: {\r\n      mode: themeMode === \"dark\" ? \"dark\" : \"light\",\r\n      background: { default: themes[themeMode].background },\r\n      text: { primary: themes[themeMode].text },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={muiTheme}>\r\n      <Component {...pageProps} />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default MyApp;"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA,uKAA+B,sBAAsB;;;;;AACrD,kCAAkC;AAElC,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACrC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE,UAAU,gBAAgB;IAErE,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kGAAkG,gCAAgC;SACrI,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI,IACtB,IAAI,CAAC,CAAC;YACL,MAAM,UAAU,KAAK,eAAe,CAAC,WAAW;YAChD,IAAI,WAAW,KAAK,UAAU,GAAG,aAAa;iBACzC,IAAI,WAAW,KAAK,UAAU,GAAG,aAAa;iBAC9C,IAAI,WAAW,KAAK,UAAU,GAAG,aAAa;iBAC9C,aAAa;QACpB;IACJ,GAAG,EAAE;IAEL,MAAM,WAAW,CAAA,GAAA,6MAAA,CAAA,cAAW,AAAD,EAAE;QAC3B,SAAS;YACP,MAAM,cAAc,SAAS,SAAS;YACtC,YAAY;gBAAE,SAAS,8FAAA,CAAA,UAAM,CAAC,UAAU,CAAC,UAAU;YAAC;YACpD,MAAM;gBAAE,SAAS,8FAAA,CAAA,UAAM,CAAC,UAAU,CAAC,IAAI;YAAC;QAC1C;IACF;IAEA,qBACE,qKAAC,iMAAA,CAAA,gBAAa;QAAC,OAAO;kBACpB,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAG9B;uCAEe","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file://A%3A/IIST%20GEO%20INFORMATICS/2nd%20SEMESTER/IEEE%20GRSS/PS-4/proj1/frontend/pages/weather.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\r\nimport { Box, Typography, Paper } from \"@mui/material\";\r\n\r\nconst WeatherPage = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  // Simulate fetching real-time weather data\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setData((prevData) => [\r\n        ...prevData.slice(-19), // Keep last 19 points\r\n        {\r\n          time: new Date().toLocaleTimeString(),\r\n          temperature: Math.random() * 15 + 20, // Random temp between 20-35°C\r\n          humidity: Math.random() * 40 + 30, // Random humidity 30-70%\r\n          wind: Math.random() * 10 + 2, // Wind speed 2-12 m/s\r\n          pm25: Math.random() * 120, // PM2.5 between 0-120 µg/m³\r\n        },\r\n      ]);\r\n    }, 2000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>Live Weather Data</Typography>\r\n      <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n        <ResponsiveContainer width=\"100%\" height={300}>\r\n          <LineChart data={data}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"time\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"temperature\" stroke=\"#ff7300\" name=\"Temperature (°C)\" />\r\n            <Line type=\"monotone\" dataKey=\"humidity\" stroke=\"#0088FE\" name=\"Humidity (%)\" />\r\n            <Line type=\"monotone\" dataKey=\"wind\" stroke=\"#00C49F\" name=\"Wind Speed (m/s)\" />\r\n            <Line type=\"monotone\" dataKey=\"pm25\" stroke=\"#FF4444\" name=\"PM2.5 (µg/m³)\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default WeatherPage;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;AAEA,MAAM,cAAc;IAClB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAEnC,2CAA2C;IAC3C,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,WAAW,YAAY;YAC3B,QAAQ,CAAC,WAAa;uBACjB,SAAS,KAAK,CAAC,CAAC;oBACnB;wBACE,MAAM,IAAI,OAAO,kBAAkB;wBACnC,aAAa,KAAK,MAAM,KAAK,KAAK;wBAClC,UAAU,KAAK,MAAM,KAAK,KAAK;wBAC/B,MAAM,KAAK,MAAM,KAAK,KAAK;wBAC3B,MAAM,KAAK,MAAM,KAAK;oBACxB;iBACD;QACH,GAAG;QAEH,OAAO,IAAM,cAAc;IAC7B,GAAG,EAAE;IAEL,qBACE,qKAAC,0KAAA,CAAA,MAAG;QAAC,IAAI;YAAE,GAAG;QAAE;;0BACd,qKAAC,+LAAA,CAAA,aAAU;gBAAC,SAAQ;gBAAK,YAAY;0BAAC;;;;;;0BACtC,qKAAC,gLAAA,CAAA,QAAK;gBAAC,WAAW;gBAAG,IAAI;oBAAE,GAAG;oBAAG,IAAI;gBAAE;0BACrC,cAAA,qKAAC,4JAAA,CAAA,sBAAmB;oBAAC,OAAM;oBAAO,QAAQ;8BACxC,cAAA,qKAAC,8IAAA,CAAA,YAAS;wBAAC,MAAM;;0CACf,qKAAC,sJAAA,CAAA,gBAAa;gCAAC,iBAAgB;;;;;;0CAC/B,qKAAC,8IAAA,CAAA,QAAK;gCAAC,SAAQ;;;;;;0CACf,qKAAC,8IAAA,CAAA,QAAK;;;;;0CACN,qKAAC,gJAAA,CAAA,UAAO;;;;;0CACR,qKAAC,+IAAA,CAAA,SAAM;;;;;0CACP,qKAAC,6IAAA,CAAA,OAAI;gCAAC,MAAK;gCAAW,SAAQ;gCAAc,QAAO;gCAAU,MAAK;;;;;;0CAClE,qKAAC,6IAAA,CAAA,OAAI;gCAAC,MAAK;gCAAW,SAAQ;gCAAW,QAAO;gCAAU,MAAK;;;;;;0CAC/D,qKAAC,6IAAA,CAAA,OAAI;gCAAC,MAAK;gCAAW,SAAQ;gCAAO,QAAO;gCAAU,MAAK;;;;;;0CAC3D,qKAAC,6IAAA,CAAA,OAAI;gCAAC,MAAK;gCAAW,SAAQ;gCAAO,QAAO;gCAAU,MAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMvE;uCAEe","debugId":null}}]
}